import { readFile } from "node:fs/promises";
import path from "node:path";
import { beforeEach, expect, test } from "vitest";
import { ensureEmptyTestDir, testOnStdout, tmpDir } from "./util.js";

beforeEach(ensureEmptyTestDir);

test("empty openapi spec", async () => {
	const { stdout, stderr } = await testOnStdout({
		contents: `
    defineOpenApiCodeGen({
      name: "test",
      sources: [{ file: "./open-api.json" }],
    });
    `,
		files: [
			{
				path: "./open-api.json",
				contents: JSON.stringify({
					openapi: "3.1",
					info: {
						title: "Test",
						version: "0.0.0",
					},
					paths: {},
				}),
			},
		],
		args: ["--resolve-types"],
	});

	expect({ stdout, stderr }).toMatchInlineSnapshot(`
		{
		  "stderr": "",
		  "stdout": "[start] Running @lightbase/open-api-code-gen for 'test-generate.ts'.
		[info] Written output to './.cache/open-api-code-gen/'. View auto-completion on 'TODO'!.
		",
		}
	`);

	expect(await readFile(path.join(tmpDir, ".cache/open-api-code-gen/test.d.ts"), "utf-8"))
		.toMatchInlineSnapshot(`
			"// Generated by @lightbase/open-api-code-gen
			import type { GeneratorHooks } from "@lightbase/open-api-code-gen";

			declare module "@lightbase/open-api-code-gen" {
			  interface GeneratorPathImplementation {
			    test: {

			    }
			  }
			}
			"
		`);
});

test("collects all paths", async () => {
	const { stdout, stderr } = await testOnStdout({
		contents: `
    defineOpenApiCodeGen({
      name: "test",
      sources: [{ file: "./open-api.json" }],
    });
    `,
		files: [
			{
				path: "./open-api.json",
				contents: JSON.stringify({
					openapi: "3.1",
					info: {
						title: "Test",
						version: "0.0.0",
					},
					paths: {
						"/users/{id}": {
							get: {},
							post: {},
						},
					},
				}),
			},
		],
		args: ["--resolve-types"],
	});

	expect({ stdout, stderr }).toMatchInlineSnapshot(`
		{
		  "stderr": "",
		  "stdout": "[start] Running @lightbase/open-api-code-gen for 'test-generate.ts'.
		[info] Written output to './.cache/open-api-code-gen/'. View auto-completion on 'TODO'!.
		",
		}
	`);

	expect(await readFile(path.join(tmpDir, ".cache/open-api-code-gen/test.d.ts"), "utf-8"))
		.toMatchInlineSnapshot(`
			"// Generated by @lightbase/open-api-code-gen
			import type { GeneratorHooks } from "@lightbase/open-api-code-gen";

			declare module "@lightbase/open-api-code-gen" {
			  interface GeneratorPathImplementation {
			    test: {
			      "/users/{id} get"?: GeneratorHooks;
			      "/users/{id} post"?: GeneratorHooks
			    }
			  }
			}
			"
		`);
});
