{
	"openapi": "3.0.3",
	"info": {
		"title": "compas",
		"description": "",
		"version": "0.0.0"
	},
	"servers": [],
	"tags": [
		{
			"name": "post",
			"description": ""
		}
	],
	"paths": {
		"/post/{postId}/update": {
			"post": {
				"tags": ["post"],
				"description": "",
				"operationId": "PostUpdate",
				"parameters": [
					{
						"name": "postId",
						"description": "",
						"required": true,
						"in": "path",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostUpdateBody"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PostUpdateResponse"
								}
							}
						}
					},
					"400": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"404": {
						"description": "Not Found Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"405": {
						"description": "Not Implemented Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					}
				}
			}
		},
		"/post/list": {
			"post": {
				"tags": ["post"],
				"description": "Generated list route for 'post'.",
				"operationId": "PostList",
				"parameters": [
					{
						"name": "offset",
						"description": "",
						"required": false,
						"in": "query",
						"schema": {
							"type": "integer",
							"minimum": -2147483647,
							"maximum": 2147483647
						}
					},
					{
						"name": "limit",
						"description": "",
						"required": false,
						"in": "query",
						"schema": {
							"type": "integer",
							"maximum": 5000
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostListBody"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PostListResponse"
								}
							}
						}
					},
					"400": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"404": {
						"description": "Not Found Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"405": {
						"description": "Not Implemented Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					}
				}
			}
		},
		"/post/{postId}/single": {
			"get": {
				"tags": ["post"],
				"description": "Generated single route for 'post'.",
				"operationId": "PostSingle",
				"parameters": [
					{
						"name": "postId",
						"description": "The primary key of the 'post' model.",
						"required": true,
						"in": "path",
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PostSingleResponse"
								}
							}
						}
					},
					"400": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"404": {
						"description": "Not Found Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"405": {
						"description": "Not Implemented Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					}
				}
			}
		},
		"/post/create": {
			"post": {
				"tags": ["post"],
				"description": "Generated create route for 'post'.",
				"operationId": "PostCreate",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostItemWrite"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PostCreateResponse"
								}
							}
						}
					},
					"400": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"404": {
						"description": "Not Found Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"405": {
						"description": "Not Implemented Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AppError"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"AppError": {
				"type": "object",
				"properties": {
					"info": {
						"type": "object"
					},
					"key": {
						"type": "string"
					},
					"status": {
						"type": "number"
					},
					"requestId": {
						"type": "string"
					}
				}
			},
			"PostUpdateBody": {
				"type": "object",
				"description": "",
				"properties": {
					"text": {
						"type": "string",
						"minLength": 10
					}
				},
				"required": ["text"]
			},
			"PostUpdateResponse": {
				"type": "object",
				"description": "",
				"properties": {
					"success": {
						"type": "boolean"
					}
				},
				"required": ["success"]
			},
			"PostListBody": {
				"type": "object",
				"description": "",
				"properties": {
					"where": {
						"type": "object",
						"description": "",
						"properties": {
							"id": {
								"type": "string",
								"format": "uuid"
							},
							"idNotEqual": {
								"type": "string",
								"format": "uuid"
							},
							"idIn": {
								"type": "array",
								"items": {
									"type": "string",
									"format": "uuid"
								}
							},
							"idNotIn": {
								"type": "array",
								"items": {
									"type": "string",
									"format": "uuid"
								}
							},
							"title": {
								"type": "string",
								"minLength": 1
							},
							"titleNotEqual": {
								"type": "string",
								"minLength": 1
							},
							"titleIn": {
								"type": "array",
								"items": {
									"type": "string",
									"minLength": 1
								}
							},
							"titleNotIn": {
								"type": "array",
								"items": {
									"type": "string",
									"minLength": 1
								}
							},
							"titleLike": {
								"type": "string",
								"minLength": 1
							},
							"titleILike": {
								"type": "string",
								"minLength": 1
							},
							"titleNotLike": {
								"type": "string",
								"minLength": 1
							},
							"createdAt": {
								"type": "string",
								"format": "date-time"
							},
							"createdAtNotEqual": {
								"type": "string",
								"format": "date-time"
							},
							"createdAtIn": {
								"type": "array",
								"items": {
									"type": "string",
									"format": "date-time"
								}
							},
							"createdAtNotIn": {
								"type": "array",
								"items": {
									"type": "string",
									"format": "date-time"
								}
							},
							"createdAtGreaterThan": {
								"type": "string",
								"format": "date-time"
							},
							"createdAtLowerThan": {
								"type": "string",
								"format": "date-time"
							},
							"updatedAt": {
								"type": "string",
								"format": "date-time"
							},
							"updatedAtNotEqual": {
								"type": "string",
								"format": "date-time"
							},
							"updatedAtIn": {
								"type": "array",
								"items": {
									"type": "string",
									"format": "date-time"
								}
							},
							"updatedAtNotIn": {
								"type": "array",
								"items": {
									"type": "string",
									"format": "date-time"
								}
							},
							"updatedAtGreaterThan": {
								"type": "string",
								"format": "date-time"
							},
							"updatedAtLowerThan": {
								"type": "string",
								"format": "date-time"
							}
						}
					},
					"orderBy": {
						"type": "array",
						"items": {
							"type": "string",
							"minLength": 1,
							"enum": ["id", "title", "createdAt", "updatedAt"]
						}
					},
					"orderBySpec": {
						"type": "object",
						"description": "",
						"properties": {
							"id": {
								"type": "string",
								"minLength": 1,
								"enum": ["ASC", "DESC"]
							},
							"title": {
								"type": "string",
								"minLength": 1,
								"enum": ["ASC", "DESC"]
							},
							"createdAt": {
								"type": "string",
								"minLength": 1,
								"enum": ["ASC", "DESC"]
							},
							"updatedAt": {
								"type": "string",
								"minLength": 1,
								"enum": ["ASC", "DESC"]
							}
						}
					}
				}
			},
			"PostListResponse": {
				"type": "object",
				"description": "",
				"properties": {
					"list": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/PostItem"
						}
					},
					"total": {
						"type": "integer",
						"minimum": -2147483647,
						"maximum": 2147483647
					}
				},
				"required": ["list", "total"]
			},
			"PostItem": {
				"type": "object",
				"description": "",
				"properties": {
					"id": {
						"description": "The primary key of the 'post' model.",
						"type": "string",
						"format": "uuid"
					},
					"text": {
						"type": "string",
						"minLength": 1
					},
					"title": {
						"type": "string",
						"minLength": 1
					},
					"createdAt": {
						"description": "Automatically generated 'createdAt', containing an ISO timestamp.",
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"description": "Automatically generated 'updatedAt', containing an ISO timestamp.",
						"type": "string",
						"format": "date-time"
					}
				},
				"required": ["id", "text", "title", "createdAt", "updatedAt"]
			},
			"PostSingleResponse": {
				"type": "object",
				"description": "",
				"properties": {
					"item": {
						"$ref": "#/components/schemas/PostItem"
					}
				},
				"required": ["item"]
			},
			"PostItemWrite": {
				"type": "object",
				"description": "",
				"properties": {
					"text": {
						"type": "string",
						"minLength": 1
					},
					"title": {
						"type": "string",
						"minLength": 1
					}
				},
				"required": ["text", "title"]
			},
			"PostCreateResponse": {
				"type": "object",
				"description": "",
				"properties": {
					"item": {
						"$ref": "#/components/schemas/PostItem"
					}
				},
				"required": ["item"]
			}
		}
	},
	"x-generator": "Compas (https://compasjs.com) v*"
}
